(function(){const s=document.createElement("link").relList;if(s&&s.supports&&s.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))n(e);new MutationObserver(e=>{for(const t of e)if(t.type==="childList")for(const r of t.addedNodes)r.tagName==="LINK"&&r.rel==="modulepreload"&&n(r)}).observe(document,{childList:!0,subtree:!0});function c(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?t.credentials="include":e.crossOrigin==="anonymous"?t.credentials="omit":t.credentials="same-origin",t}function n(e){if(e.ep)return;e.ep=!0;const t=c(e);fetch(e.href,t)}})();function q(){const o=document.querySelector(".menu-wrapper"),s=document.querySelector(".menu-button"),c=document.querySelectorAll(".menu-button img");if(!s||!o){console.error("menuButton or menuWrapper found!");return}s.addEventListener("click",n);function n(){c.forEach(e=>{e.classList.toggle("hidden")}),o.classList.toggle("menu-show")}}async function y(){const o="data/quests.json";try{const s=await fetch(o);if(!s.ok)throw new Error(`Response status: ${s.status}`);return await s.json()}catch(s){console.error(s.message)}}async function E(){const o=document.querySelector("main table tbody");if(!o){console.error("Tbody not found!");return}const s=await y();for(let n=0;n<s.length;n++){const e=s[n],t=document.createElement("tr");t.setAttribute("data-id",n.toString()),t.classList.add("quest");const r=document.createElement("td");r.textContent=e.location,r.rowSpan=e.extraDetails.length||1,t.append(r);const l=document.createElement("td");l.classList.add("quest-name");const d=document.createElement("a");d.classList.add("quest-link"),d.textContent=e.questInfo.name,d.setAttribute("href",e.questInfo.hyperlink),l.append(d),l.rowSpan=e.extraDetails.length||1,t.append(l);const u=document.createElement("td");u.classList.add("quest-completed");const a=document.createElement("input");a.type="checkbox",u.append(a),u.rowSpan=e.extraDetails.length||1,t.append(u);const m=c(e.extraDetails,!0);if(t.append(m),o.append(t),e.extraDetails.length>1)for(let i=1;i<e.extraDetails.length;i++){const f=document.createElement("tr");f.setAttribute("data-id",n.toString());const g=c(e.extraDetails,!1,i);f.append(g),o.append(f)}}function c(n,e=!1,t=0){var l,d,u;const r=document.createElement("td");if(r.classList.add("extra-detail"),(l=n[e?0:t])!=null&&l.hyperlink&&n[e?0:t].description){const a=document.createElement("a");a.classList.add("extra-detail-link"),a.textContent=n[e?0:t].description,a.setAttribute("href",n[e?0:t].hyperlink),r.append(a)}else if((d=n[e?0:t])!=null&&d.hyperlink&&!n[e?0:t].description){const a=document.createElement("a");a.classList.add("extra-detail-link"),a.textContent=n[e?0:t].hyperlink,a.setAttribute("href",n[e?0:t].hyperlink),r.append(a)}else r.textContent=(u=n[e?0:t])==null?void 0:u.description;return r}}const p={get:()=>{const o=document.querySelectorAll("tr.quest"),s=[];return o.forEach(c=>{const n=c.dataset.id;if(typeof n!="string"){console.error("id must be string!");return}let t=localStorage.getItem(n)==="true";s.push({id:n||"",isCompleted:t});const r=c.querySelector(".quest-completed input");r&&(r.checked=t)}),s},save:()=>{document.querySelectorAll("tr.quest").forEach(s=>{if(typeof s.dataset.id!="string"){console.error("id must be string!");return}const e=s.querySelector(".quest-completed input").checked,t=s.dataset.id;if(!t||typeof t!="string"){console.error("Quest storage key is of incorrect type or not found!");return}localStorage.setItem(t,e.toString())})}};function h(){const o=p.get(),s=o.length,n=(o.filter(t=>t.isCompleted===!0).length/s*100).toFixed(1),e=document.querySelector(".completed-percentage");if(!e){console.error("Completed percentage showing element not found!");return}e.textContent=n}function S(){const o=document.querySelector(".hide-quests input");if(!o){console.error("hideQuestsBtn not found!");return}const s="hide-quests";let n=localStorage.getItem(s)==="true";o.checked=n,e(n),o.addEventListener("click",()=>{const t=o.checked;localStorage.setItem(s,`${t?"true":"false"}`),e(t)});function e(t){document.querySelectorAll("tbody .quest").forEach(l=>{const d=l.querySelector(".quest-completed input");if(!d){console.error("isCompletedEl not found!");return}const u=d.checked,a=l.dataset.id;document.querySelectorAll(`[data-id="${a}"]`).forEach(i=>{u&&i.classList.toggle("hidden-completed",t)})})}}function k(o){const s=document.querySelector(".hide-quests input");if(!s){console.error("hideQuestsBtn not found!");return}if(!s.checked)return;const c=o,n=o.parentElement.parentElement;if(!n){console.log("questEl not found!");return}const e=n.dataset.id,t=c.checked;document.querySelectorAll(`[data-id="${e}"]`).forEach(l=>{t&&l.classList.toggle("hidden-completed")})}function b(){const o=document.querySelector("table");if(!o){console.error("Table element not found!");return}h(),o.addEventListener("click",s=>{const c=s.target;if(!c){console.error("Click event not working properly");return}c.matches(".quest-completed input")&&(p.save(),h(),k(c))})}function C(){const o=document.querySelector(".quest-search input");if(!o){console.error("searchInput not found!");return}let s=[];o.addEventListener("focus",()=>{s=c()}),o.addEventListener("input",n=>{const t=n.target.value.toLowerCase();for(const r of s){const d=r[0].querySelector(".quest-name a").innerHTML.toLowerCase().includes(t);r.forEach(u=>{u.classList.toggle("hidden",!d)})}});function c(){const e=p.get().map(r=>r.id),t=[];for(const r of e)t.push(document.querySelectorAll(`[data-id="${r}"]`));return t}}function L(){const o=document.querySelector("main"),s=document.querySelector(".theme-switch input"),c="preferred-theme";if(!o||!s){console.error("Main or toggleThemeButton not found!");return}const n=localStorage.getItem(c),e=window.matchMedia("(prefers-color-scheme: dark)").matches;n?(n==="dark"?o.classList.add("dark-theme"):o.classList.remove("dark-theme"),s.checked=n==="dark"):(e&&o.classList.add("dark-theme"),s.checked=e),s.addEventListener("click",t);function t(){if(!o||!s){console.error("Body or toggleThemeButton not found!");return}s.checked?(o.classList.add("dark-theme"),localStorage.setItem(c,"dark")):(o.classList.remove("dark-theme"),localStorage.setItem(c,"light"))}}(async function(){q(),await E(),L(),b(),S(),C()})();(()=>{const o=document.querySelector(".export-quest-data");if(!o){console.error("Export button not found!");return}o.addEventListener("click",()=>{if(window.confirm("Export quest data?")){const n=c();s(n,"quest-data.json")}});function s(n,e="file.txt"){const t=URL.createObjectURL(n),r=document.createElement("a");r.href=t,r.download=e,document.body.appendChild(r),r.dispatchEvent(new MouseEvent("click",{bubbles:!0,cancelable:!0,view:window})),document.body.removeChild(r)}function c(){const n=document.querySelectorAll(".quest"),e=[];n.forEach(l=>{const d=l.dataset.id;let u=l.querySelector(".quest-name");const a=l.querySelector(".quest-completed input"),m={id:d||"",name:u!=null&&u.textContent?u.textContent:"",isCompleted:a?a.checked:!1};e.push(m)});const t=JSON.stringify(e,null,2);return new Blob([t],{type:"application/json"})}})();(()=>{const o=document.querySelector(".import-quest-data");if(!o){console.error("File input not found!");return}o.addEventListener("change",()=>{if(o.files&&o.files.length>0){const s=new FileReader;s.readAsText(o.files[0]),s.addEventListener("load",()=>{if(window.confirm("Import quest data?")){try{const c=s.result;if(typeof c!="string")throw new Error("Invalid file content");const n=JSON.parse(c),e=document.querySelectorAll("tbody tr.quest");n.forEach(t=>{for(const r of e){const l=r.dataset.id;let d=r.querySelector(".quest-completed input");if(!d){console.error("Checkbox not found!");return}t.id===l&&(d.checked=!!t.isCompleted)}})}catch{alert("Please import correct data")}p.save(),h()}else o.value=""})}})})();
