(function(){const n=document.createElement("link").relList;if(n&&n.supports&&n.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))o(e);new MutationObserver(e=>{for(const t of e)if(t.type==="childList")for(const c of t.addedNodes)c.tagName==="LINK"&&c.rel==="modulepreload"&&o(c)}).observe(document,{childList:!0,subtree:!0});function s(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?t.credentials="include":e.crossOrigin==="anonymous"?t.credentials="omit":t.credentials="same-origin",t}function o(e){if(e.ep)return;e.ep=!0;const t=s(e);fetch(e.href,t)}})();function y(){const r=document.querySelector(".menu-button"),n=document.querySelectorAll(".menu-button img"),s=document.querySelector(".menu");if(!r||!s){console.error("Menu button or menu not found!");return}r.addEventListener("click",()=>{n.forEach(e=>{e.classList.toggle("hidden")});const o=s.style.right;o==="-250px"||!o?s.style.right="0px":s.style.right="-250px"})}async function q(){const r="data/quests.json";try{const n=await fetch(r);if(!n.ok)throw new Error(`Response status: ${n.status}`);return await n.json()}catch(n){console.error(n.message)}}async function k(){const r=document.querySelector("main table tbody");if(!r){console.error("Tbody not found!");return}const n=await q();for(let o=0;o<n.length;o++){const e=n[o],t=document.createElement("tr");t.setAttribute("data-id",o.toString()),t.classList.add("quest");const c=document.createElement("td");c.textContent=e.location,c.rowSpan=e.extraDetails.length||1,t.append(c);const l=document.createElement("td");l.classList.add("quest-name");const d=document.createElement("a");d.classList.add("quest-link"),d.textContent=e.questInfo.name,d.setAttribute("href",e.questInfo.hyperlink),l.append(d),l.rowSpan=e.extraDetails.length||1,t.append(l);const i=document.createElement("td");i.classList.add("quest-completed");const a=document.createElement("input");a.type="checkbox",i.append(a),i.rowSpan=e.extraDetails.length||1,t.append(i);const u=s(e.extraDetails,!0);if(t.append(u),r.append(t),e.extraDetails.length>1)for(let m=1;m<e.extraDetails.length;m++){const p=document.createElement("tr");p.setAttribute("data-id",o.toString());const g=s(e.extraDetails,!1,m);p.append(g),r.append(p)}}function s(o,e=!1,t=0){var l,d,i;const c=document.createElement("td");if(c.classList.add("extra-detail"),(l=o[e?0:t])!=null&&l.hyperlink&&o[e?0:t].description){const a=document.createElement("a");a.classList.add("extra-detail-link"),a.textContent=o[e?0:t].description,a.setAttribute("href",o[e?0:t].hyperlink),c.append(a)}else if((d=o[e?0:t])!=null&&d.hyperlink&&!o[e?0:t].description){const a=document.createElement("a");a.classList.add("extra-detail-link"),a.textContent=o[e?0:t].hyperlink,a.setAttribute("href",o[e?0:t].hyperlink),c.append(a)}else c.textContent=(i=o[e?0:t])==null?void 0:i.description;return c}}const h={get:()=>{const r=document.querySelectorAll("tr.quest"),n=[];return r.forEach(s=>{const o=s.dataset.id;if(typeof o!="string"){console.error("id must be string!");return}let t=localStorage.getItem(o)==="true";n.push({id:o||"",isCompleted:t});const c=s.querySelector(".quest-completed input");c&&(c.checked=t)}),n},save:()=>{document.querySelectorAll("tr.quest").forEach(n=>{if(typeof n.dataset.id!="string"){console.error("id must be string!");return}const e=n.querySelector(".quest-completed input").checked,t=n.dataset.id;if(!t||typeof t!="string"){console.error("Quest storage key is of incorrect type or not found!");return}localStorage.setItem(t,e.toString())})}};function f(){const r=h.get(),n=r.length,o=(r.filter(t=>t.isCompleted===!0).length/n*100).toFixed(1),e=document.querySelector(".completed-percentege");if(!e){console.error("Completed percentage showing element not found!");return}e.textContent=o}function b(){const r=document.querySelector("table");if(!r){console.error("Table element not found!");return}f(),r.addEventListener("click",n=>{let s;if(n.target&&(s=n.target),!s){console.error("Click event not working properly");return}s.matches(".quest-completed input")&&(h.save(),f())})}function S(){const r=document.querySelector("main"),n=document.querySelector(".theme-switch input"),s="preferred-theme";if(!r||!n){console.error("Main or toggleThemeButton not found!");return}const o=localStorage.getItem(s),e=window.matchMedia("(prefers-color-scheme: dark)").matches;o?(o==="dark"?r.classList.add("dark-theme"):r.classList.remove("dark-theme"),n.checked=o==="dark"):(e&&r.classList.add("dark-theme"),n.checked=e),n.addEventListener("click",t);function t(){if(!r||!n){console.error("Body or toggleThemeButton not found!");return}n.checked?(r.classList.add("dark-theme"),localStorage.setItem(s,"dark")):(r.classList.remove("dark-theme"),localStorage.setItem(s,"light"))}}(async function(){y(),await k(),S(),b()})();(()=>{const r=document.querySelector(".export-quest-data");if(!r){console.error("Export button not found!");return}r.addEventListener("click",()=>{if(window.confirm("Export quest data?")){const o=s();n(o,"quest-data.json")}});function n(o,e="file.txt"){const t=URL.createObjectURL(o),c=document.createElement("a");c.href=t,c.download=e,document.body.appendChild(c),c.dispatchEvent(new MouseEvent("click",{bubbles:!0,cancelable:!0,view:window})),document.body.removeChild(c)}function s(){const o=document.querySelectorAll(".quest"),e=[];o.forEach(l=>{const d=l.dataset.id;let i=l.querySelector(".quest-name");const a=l.querySelector(".quest-completed input"),u={id:d||"",name:i!=null&&i.textContent?i.textContent:"",isCompleted:a?a.checked:!1};e.push(u)});const t=JSON.stringify(e,null,2);return new Blob([t],{type:"application/json"})}})();(()=>{const r=document.querySelector(".import-quest-data");if(!r){console.error("File input not found!");return}r.addEventListener("change",()=>{if(r.files&&r.files.length>0){const n=new FileReader;n.readAsText(r.files[0]),n.addEventListener("load",()=>{if(window.confirm("Import quest data?")){try{const s=n.result;if(typeof s!="string")throw new Error("Invalid file content");const o=JSON.parse(s),e=document.querySelectorAll("tbody tr.quest");o.forEach(t=>{for(const c of e){const l=c.dataset.id;let d=c.querySelector(".quest-completed input");if(!d){console.error("Checkbox not found!");return}t.id===l&&(d.checked=!!t.isCompleted)}})}catch{alert("Please import correct data")}h.save(),f()}else r.value=""})}})})();
